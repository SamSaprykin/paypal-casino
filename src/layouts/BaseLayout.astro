---
import '../styles/global.css';
import type { SEOMeta } from '../types/contentful';

export interface Props {
  meta: SEOMeta;
  class?: string;
}

const { meta, class: className } = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImageURL = meta.image 
  ? new URL(meta.image, Astro.site) 
  : new URL('/images/og-default.jpg', Astro.site);
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={meta.description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Primary Meta Tags -->
    <title>{meta.title}</title>
    <meta name="title" content={meta.title} />
    <meta name="description" content={meta.description} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={meta.type || 'website'} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={meta.title} />
    <meta property="og:description" content={meta.description} />
    <meta property="og:image" content={socialImageURL} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={meta.title} />
    <meta property="twitter:description" content={meta.description} />
    <meta property="twitter:image" content={socialImageURL} />
    

    {meta.type === 'article' && (
      <>
        {meta.publishedTime && <meta property="article:published_time" content={meta.publishedTime} />}
        {meta.modifiedTime && <meta property="article:modified_time" content={meta.modifiedTime} />}
        {meta.author && <meta property="article:author" content={meta.author} />}
     
      </>
    )}
    
    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="preconnect" href="https://images.ctfassets.net" />
    
    <!-- JSON-LD structured data -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": meta.type === 'article' ? 'Article' : 'WebSite',
      "name": meta.title,
      "description": meta.description,
      "url": canonicalURL.toString(),
      ...(meta.type === 'article' && {
        "headline": meta.title,
        "datePublished": meta.publishedTime,
        "dateModified": meta.modifiedTime,
        "author": {
          "@type": "Person",
          "name": meta.author
        }
      })
    })} />
  </head>
  
  <body class={`min-h-screen flex flex-col ${className || ''}`}>
    <slot />
    
    <!-- Analytics and other scripts can be added here -->
    <script>
      // Add any global JavaScript here
      console.log('ðŸš€ Astro + Contentful + Tailwind Starter');
    </script>
  </body>
</html>


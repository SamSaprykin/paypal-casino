---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Layout/Header.astro';
import Footer from '../../components/Layout/Footer.astro';
import BlogCard from '../../components/BlogCard.astro';
import { getBlogPosts } from '../../lib/contentful';


const posts = await getBlogPosts(50);

const meta = {
  title: 'Blog - Astro Contentful Starter',
  description: 'Discover the latest articles, tutorials, and insights about web development, Astro, Contentful, and modern web technologies.',
  type: 'website' as const,
};
---

<BaseLayout meta={meta}>
  <Header />
  
  <main class="flex-1">
    <!-- Hero Section -->
    <section class="bg-gradient-to-br from-primary-50 via-white to-secondary-50 section-padding">
      <div class="container-custom">
        <div class="max-w-4xl mx-auto text-center">
          <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-secondary-900 mb-6">
            Our Blog
          </h1>
          <p class="text-xl md:text-2xl text-secondary-600 mb-8 max-w-3xl mx-auto">
            Discover insights, tutorials, and the latest updates about web development, 
            modern frameworks, and best practices.
          </p>
          
          <!-- Search and Filter (placeholder for future enhancement) -->
          <div class="max-w-md mx-auto">
            <div class="relative">
              <input
                type="search"
                placeholder="Search articles..."
                class="w-full px-4 py-3 pl-12 pr-4 text-secondary-900 bg-white border border-secondary-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 outline-none"
                id="search-input"
              />
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="h-5 w-5 text-secondary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>


    <!-- Blog Posts -->
    <section class="section-padding bg-white">
      <div class="container-custom">
        {posts.length > 0 ? (
          <>
            <!-- Featured Post -->
            {posts[0] && (
              <div class="mb-16">
                <h2 class="text-2xl font-bold text-secondary-900 mb-8">Featured Article</h2>
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                  <BlogCard post={posts[0]} featured={true} />
                </div>
              </div>
            )}

            <!-- All Posts Grid -->
            <div class="mb-8">
              <h2 class="text-2xl font-bold text-secondary-900 mb-8">
                {posts.length > 1 ? 'Latest Articles' : 'All Articles'}
              </h2>
            </div>
            
            <div id="posts-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {posts.slice(1).map((post) => (
                <div class="blog-post-item">
                  <BlogCard post={post} />
                </div>
              ))}
            </div>

            <!-- No results message (hidden by default) -->
            <div id="no-results" class="hidden text-center py-16">
              <div class="max-w-md mx-auto">
                <svg class="mx-auto h-12 w-12 text-secondary-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.47-.881-6.08-2.33" />
                </svg>
                <h3 class="text-lg font-medium text-secondary-900 mb-2">No articles found</h3>
                <p class="text-secondary-600">Try adjusting your search or filter criteria.</p>
              </div>
            </div>
          </>
        ) : (
          <!-- Empty state -->
          <div class="text-center py-16">
            <div class="max-w-md mx-auto">
              <svg class="mx-auto h-12 w-12 text-secondary-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
              </svg>
              <h3 class="text-lg font-medium text-secondary-900 mb-2">No blog posts yet</h3>
              <p class="text-secondary-600 mb-6">
                Blog posts will appear here once you've added them to your Contentful space.
              </p>
              <a 
                href="https://contentful.com" 
                class="btn-primary"
                target="_blank"
                rel="noopener noreferrer"
              >
                Set up Contentful
              </a>
            </div>
          </div>
        )}
      </div>
    </section>
  </main>
  
  <Footer />
</BaseLayout>

<script>
  // Search and filter functionality
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('search-input') as HTMLInputElement;
    const tagFilters = document.querySelectorAll('.tag-filter');
    const postsGrid = document.getElementById('posts-grid');
    const noResults = document.getElementById('no-results');
    const blogPosts = document.querySelectorAll('.blog-post-item');

    let currentTag = 'all';
    let currentSearch = '';

    // Filter posts based on current criteria
    function filterPosts() {
      let visibleCount = 0;

      blogPosts.forEach((post) => {
        const postElement = post as HTMLElement;
      
        const postText = postElement.textContent?.toLowerCase() || '';
        
     
        const matchesSearch = currentSearch === '' || postText.includes(currentSearch.toLowerCase());
        

      });

      // Show/hide no results message
      if (noResults && postsGrid) {
        if (visibleCount === 0 && blogPosts.length > 0) {
          noResults.classList.remove('hidden');
          postsGrid.classList.add('hidden');
        } else {
          noResults.classList.add('hidden');
          postsGrid.classList.remove('hidden');
        }
      }
    }

    // Search functionality
    if (searchInput) {
      searchInput.addEventListener('input', (e) => {
        currentSearch = (e.target as HTMLInputElement).value;
        filterPosts();
      });
    }

    // Tag filter functionality
    tagFilters.forEach((filter) => {
      filter.addEventListener('click', (e) => {
        const button = e.target as HTMLButtonElement;
        const tag = button.dataset.tag || 'all';
        
        // Update active state
        tagFilters.forEach((f) => f.classList.remove('active', 'bg-primary-100', 'text-primary-800'));
        tagFilters.forEach((f) => f.classList.add('bg-secondary-100', 'text-secondary-700'));
        
        button.classList.add('active', 'bg-primary-100', 'text-primary-800');
        button.classList.remove('bg-secondary-100', 'text-secondary-700');
        
        currentTag = tag;
        filterPosts();
      });
    });
  });
</script>

